        -:    0:Source:C:/Users/user/Downloads/GestiuneMasini_AlocareDinamica/Seminar2_GestiuneMelodii_AlocareDinamica/Seminar2_GestiuneMelodii_AlocareDinamica/my_utils.c
        -:    0:Graph:C:\Users\user\Downloads\GestiuneMasini_AlocareDinamica\Seminar2_GestiuneMelodii_AlocareDinamica\cmake-build-debug-coverage\CMakeFiles\Seminar2_GestiuneMelodii_AlocareDinamica.dir\Seminar2_GestiuneMelodii_AlocareDinamica\my_utils.c.gcno
        -:    0:Data:C:\Users\user\Downloads\GestiuneMasini_AlocareDinamica\Seminar2_GestiuneMelodii_AlocareDinamica\cmake-build-debug-coverage\CMakeFiles\Seminar2_GestiuneMelodii_AlocareDinamica.dir\Seminar2_GestiuneMelodii_AlocareDinamica\my_utils.c.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#pragma once
        -:    2:#include <assert.h>
        -:    3:#include <string.h>
        -:    4:#include <stdlib.h>
function trimTrailing called 3 returned 100% blocks executed 100%
        3:    5:void trimTrailing(char* str)
        3:    5-block  0
        -:    6:{
        -:    7:    int index, i;
        -:    8:
        -:    9:    /* Set default index */
        3:   10:    index = -1;
        -:   11:
        -:   12:    /* Find last index of non-white space character */
        3:   13:    i = 0;
       22:   14:    while (str[i] != '\0')
        3:   14-block  0
       22:   14-block  1
branch  0 taken 19
branch  1 taken 3 (fallthrough)
        -:   15:    {
       19:   16:        if (str[i] != ' ' && str[i] != '\t' && str[i] != '\n')
       19:   16-block  0
branch  0 taken 14 (fallthrough)
branch  1 taken 5
       14:   16-block  1
branch  2 taken 14 (fallthrough)
branch  3 taken 0
       14:   16-block  2
branch  4 taken 12 (fallthrough)
branch  5 taken 2
        -:   17:        {
       12:   18:            index = i;
       12:   18-block  0
        -:   19:        }
        -:   20:
       19:   21:        i++;
       19:   21-block  0
        -:   22:    }
        -:   23:
        -:   24:    /* Mark next character to last non-white space character as NULL */
        3:   25:    str[index + 1] = '\0';
        3:   26:}
        -:   27:
        -:   28:
function testTrim called 1 returned 100% blocks executed 70%
        1:   29:void testTrim(){
        1:   29-block  0
        1:   30:    char* t1 = malloc(5*sizeof(char));
        1:   31:    strcpy(t1, "abcd");
        1:   32:    trimTrailing(t1);
        1:   32-block  0
call    0 returned 1
        1:   33:    assert(strcmp(t1, "abcd") == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    $$$$$:   33-block  0
call    2 never executed
        1:   34:    free(t1);
        -:   35:
        1:   36:    char* t2 = malloc(9*sizeof(char));
        1:   37:    strcpy(t2, "abcd    ");
        1:   38:    trimTrailing(t2);
        1:   38-block  0
call    0 returned 1
        1:   39:    assert(strcmp(t2, "abcd") == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    $$$$$:   39-block  0
call    2 never executed
        1:   40:    free(t2);
        -:   41:
        1:   42:    char* t3 = malloc(8*sizeof(char));
        1:   43:    strcpy(t3, "abcd\n \n");
        1:   44:    trimTrailing(t3);
        1:   44-block  0
call    0 returned 1
        1:   45:    assert(strcmp(t3, "abcd") == 0);
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    $$$$$:   45-block  0
call    2 never executed
        1:   46:    free(t3);
        1:   47:}
